#? stdtmpl(subsChar = '$', metaChad = '#')
#import strutils, xmltree, strformat
#import ../types, ../utils, ../formatters
#const hostname {.strdefine.} = "nitter.net"
#
#proc renderRssTweet(tweet: Tweet; prefs: Prefs): string =
#let text = linkifyText(tweet.text, prefs, rss=true)
#if tweet.quote.isSome and get(tweet.quote).available:
#let quoteLink = hostname & getLink(get(tweet.quote))
<p>${text}<br><a href="https://${quoteLink}">${quoteLink}</a></p>
#else:
<p>${text}</p>
#end if
#if tweet.photos.len > 0:
<img src="https://${hostname}${getPicUrl(tweet.photos[0])}" width="250" />
#elif tweet.video.isSome:
<img src="https://${hostname}${getPicUrl(get(tweet.video).thumb)}" width="250" />
#elif tweet.gif.isSome:
#let thumb = &"https://{hostname}{getPicUrl(get(tweet.gif).thumb)}"
#let url = &"https://{hostname}{getGifUrl(get(tweet.gif).url)}"
<video poster="${thumb}" autoplay muted loop width="250">
  <source src="${url}" type="video/mp4"</source></video>
#end if
#end proc
#
#proc getTitle(tweet: Tweet; prefs: Prefs): string =
#if tweet.pinned: result = "Pinned: "
#elif tweet.retweet.isSome: result = "RT: "
#end if
#result &= xmltree.escape(replaceUrl(tweet.text, prefs))
#if result.len > 0: return
#end if
#if tweet.photos.len > 0:
#  result &= "Image"
#elif tweet.video.isSome:
#  result &= "Video"
#elif tweet.gif.isSome:
#  result &= "Gif"
#end if
#end proc
#
#proc renderTimelineRss*(tweets: seq[Tweet]; profile: Profile): string =
#let prefs = Prefs(replaceTwitter: hostname)
#result = ""
<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:nitter="http://${hostname}" version="2.0">
  <channel>
    <atom:link href="http://${hostname}${profile.username}/rss" rel="self" type="application/rss+xml" />
    <title>${profile.fullname} / @${profile.username}</title>
    <link>https://${hostname}${profile.username}</link>
    <description>Twitter feed for: ${profile.username}. Generated by ${hostname}</description>
    <language>en-us</language>
    <ttl>40</ttl>
    <image>
        <url>https://${hostname}${getPicUrl(profile.getUserPic(style="_400x400"))}</url>
    </image>
    #for tweet in tweets:
    <item>
      <title>${getTitle(tweet, prefs)}</title>
      <creator> (@${tweet.profile.username})</creator>
      <description><![CDATA[${renderRssTweet(tweet, prefs).strip(chars={'\n'})}]]></description>
      <pubDate>${getTime(tweet)}</pubDate>
      <guid>https://${hostname}${getLink(tweet)}</guid>
      <link>https://${hostname}${getLink(tweet)}</link>
    </item>
    #end for
  </channel>
</rss>
#end proc
